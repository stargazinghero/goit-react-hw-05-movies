{"version":3,"file":"static/js/566.54e2298c.chunk.js","mappings":"sUAGAA,IAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,6GAENF,IAAAA,IAAA,oCAAuCC,IAFjC,cAEvBE,EAFuB,yBAGtBA,EAASC,KAAKC,SAHQ,gCAK7BC,EAAAA,GAAAA,MAAY,KAAMC,SALW,yDAAH,qDASjBC,EAAe,mCAAG,WAAMC,GAAN,gGAEJT,IAAAA,IAAA,gCACIC,EADJ,kBACqBQ,IAHjB,cAErBN,EAFqB,yBAKpBA,EAASC,KAAKC,SALM,gCAO3BC,EAAAA,GAAAA,MAAY,KAAMC,SAPS,yDAAH,sDAWfG,EAAe,mCAAG,WAAMC,GAAN,gGAEJX,IAAAA,IAAA,iBAAoBW,EAApB,oBAAkCV,IAF9B,cAErBE,EAFqB,yBAGpBA,EAASC,MAHW,gCAK3BE,EAAAA,GAAAA,MAAY,KAAMC,SALS,yDAAH,sDASfK,EAAe,mCAAG,WAAMD,GAAN,gGAEJX,IAAAA,IAAA,iBAAoBW,EAApB,4BAA0CV,IAFtC,cAErBE,EAFqB,yBAGpBA,EAASC,KAAKS,MAHM,gCAK3BP,EAAAA,GAAAA,MAAY,KAAMC,SALS,yDAAH,sDASfO,EAAe,mCAAG,WAAMH,GAAN,gGAEJX,IAAAA,IAAA,iBAAoBW,EAApB,4BAA0CV,IAFtC,cAErBE,EAFqB,yBAGpBA,EAASC,KAAKC,SAHM,gCAK3BC,EAAAA,GAAAA,MAAY,KAAMC,SALS,yDAAH,uD,sKCvCb,SAASQ,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOH,EAAP,KAAaI,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OARAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,oGACQC,EAAAA,GAAoBJ,GAD5B,OACRb,EADQ,OAEdY,EAAQZ,GAFM,2CAAH,qDAIbgB,MACC,CAACH,KAGF,iCACIL,EAAKU,SAAU,wEAChBV,IACC,SAAC,KAAD,WACE,wBACGA,EAAKW,KAAI,SAAAC,GACR,OACE,UAAC,IAAD,WACGA,EAAGC,cACF,gBACEC,IAAG,yCAAoCF,EAAGC,cAC1CE,IAAKf,EAAKgB,iBAGZ,gBACEF,IAAI,0EACJC,IAAI,UACJE,MAAO,IACPC,OAAQ,OAGZ,uBAAIN,EAAGI,iBACP,uCAAeJ,EAAGO,eAfLP,EAAGd,gB,oECxBrBsB,E,QAAWC,EAAAA,GAAH,8C,mICARC,EAAaD,EAAAA,EAAAA,IAAH,6HAOVE,EAAYF,EAAAA,EAAAA,IAAH,8CAITG,EAAiBH,EAAAA,EAAAA,GAAH","sources":["services/api-movies.js","views/CastView/CastView.jsx","views/HomeView/HomeView.styled.jsx","views/MovieDetailsView/MoveDetails.styled.jsx"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '30b880cb8af36a78b014f41021bfb163';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const getSearchMovies = async searchQuery => {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${API_KEY}&query=${searchQuery}`\n    );\n    return response.data.results;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const getMovieDetails = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const getMovieCredits = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n    return response.data.cast;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const getMovieReviews = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { BlockMovie } from 'views/MovieDetailsView/MoveDetails.styled';\nimport * as API from '../../services/api-movies';\nimport { ListItem } from '../HomeView/HomeView.styled';\n\nexport default function CastView() {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getData = async () => {\n      const results = await API.getMovieCredits(movieId);\n      setCast(results);\n    };\n    getData();\n  }, [movieId]);\n\n  return (\n    <>\n      {!cast.length && <p>We don't have any casters info for the movie</p>}\n      {cast && (\n        <BlockMovie>\n          <ul>\n            {cast.map(el => {\n              return (\n                <ListItem key={el.id}>\n                  {el.profile_path ? (\n                    <img\n                      src={`https://image.tmdb.org/t/p/w200${el.profile_path}`}\n                      alt={cast.original_name}\n                    />\n                  ) : (\n                    <img\n                      src=\"https://upload.wikimedia.org/wikipedia/commons/c/c2/No_image_poster.png\"\n                      alt=\"Unknown\"\n                      width={200}\n                      height={300}\n                    />\n                  )}\n                  <p>{el.original_name}</p>\n                  <p>Character: {el.character}</p>\n                </ListItem>\n              );\n            })}\n          </ul>\n        </BlockMovie>\n      )}\n    </>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const ListItem = styled.li`\n  padding: 5px 0px;\n`;\n","import styled from '@emotion/styled';\n\nexport const BlockMovie = styled.div`\n  display: flex;\n  margin-top: 10px;\n  padding-bottom: 20px;\n  border-bottom: 1px solid #2a363b;\n`;\n\nexport const MovieInfo = styled.div`\n  margin-left: 20px;\n`;\n\nexport const AdditionalInfo = styled.ul`\n  padding-bottom: 20px;\n  border-bottom: 1px solid #2a363b;\n`;\n"],"names":["axios","API_KEY","getTrendingMovies","response","data","results","toast","message","getSearchMovies","searchQuery","getMovieDetails","id","getMovieCredits","cast","getMovieReviews","CastView","useState","setCast","movieId","useParams","useEffect","getData","API","length","map","el","profile_path","src","alt","original_name","width","height","character","ListItem","styled","BlockMovie","MovieInfo","AdditionalInfo"],"sourceRoot":""}