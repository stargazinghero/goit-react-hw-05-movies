{"version":3,"file":"static/js/759.30dafff4.chunk.js","mappings":"6LAEe,SAASA,IACtB,OACE,SAAC,KAAD,CACEC,MAAM,OACNC,OAAQ,GACRC,MAAO,GACPC,aAAc,CAAEC,eAAgB,c,oNCLtCC,IAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,6GAENF,IAAAA,IAAA,oCAAuCC,IAFjC,cAEvBE,EAFuB,yBAGtBA,EAASC,KAAKC,SAHQ,gCAK7BC,EAAAA,GAAAA,MAAY,KAAMC,SALW,yDAAH,qDASjBC,EAAe,mCAAG,WAAMC,GAAN,gGAEJT,IAAAA,IAAA,gCACIC,EADJ,kBACqBQ,IAHjB,cAErBN,EAFqB,yBAKpBA,EAASC,KAAKC,SALM,gCAO3BC,EAAAA,GAAAA,MAAY,KAAMC,SAPS,yDAAH,sDAWfG,EAAe,mCAAG,WAAMC,GAAN,gGAEJX,IAAAA,IAAA,iBAAoBW,EAApB,oBAAkCV,IAF9B,cAErBE,EAFqB,yBAGpBA,EAASC,MAHW,gCAK3BE,EAAAA,GAAAA,MAAY,KAAMC,SALS,yDAAH,sDASfK,EAAe,mCAAG,WAAMD,GAAN,gGAEJX,IAAAA,IAAA,iBAAoBW,EAApB,4BAA0CV,IAFtC,cAErBE,EAFqB,yBAGpBA,EAASC,KAAKS,MAHM,gCAK3BP,EAAAA,GAAAA,MAAY,KAAMC,SALS,yDAAH,sDASfO,EAAe,mCAAG,WAAMH,GAAN,gGAEJX,IAAAA,IAAA,iBAAoBW,EAApB,4BAA0CV,IAFtC,cAErBE,EAFqB,yBAGpBA,EAASC,KAAKC,SAHM,gCAK3BC,EAAAA,GAAAA,MAAY,KAAMC,SALS,yDAAH,uD,oEC3CfQ,E,QAAWC,EAAAA,GAAH,8C,gJCARC,EAAgBD,EAAAA,EAAAA,KAAH,8FAMbE,EAAYF,EAAAA,EAAAA,MAAH,uSAcTG,EAASH,EAAAA,EAAAA,OAAH,4X,GAiBKA,EAAAA,EAAAA,GAAH,6C,mEC/BN,SAASI,IACtB,OAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,MAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA0BC,EAAAA,EAAAA,MAA1B,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,GAAKJ,EAAMK,IAAI,SAAf,CAKA,IAAMC,EAAO,mCAAG,oGACQC,EAAAA,GAAoBP,EAAMK,IAAI,UADtC,OACR3B,EADQ,OAEdoB,EAAUpB,GACa,IAAnBA,EAAQ8B,QACV7B,EAAAA,GAAAA,KAAW,uBAJC,2CAAH,qDAOb2B,SAXER,EAAU,QAYX,CAACE,IAeJ,OACE,iCACE,UAACV,EAAD,CAAemB,aAAa,MAAMC,SAXjB,SAAAC,GACnBA,EAAEC,iBACGjB,GACHhB,EAAAA,GAAAA,KAAW,0BAEbsB,EAAS,CAAED,MAAOL,IAClBC,EAAc,KAKZ,WACE,SAACL,EAAD,CACEsB,KAAK,OACLC,MAAOnB,EACPoB,SAnBmB,SAAAJ,GACzBf,EAAce,EAAEK,cAAcF,WAoB1B,SAACtB,EAAD,CAAQqB,KAAK,SAAb,wBAEAhB,GAAUG,EAAMK,IAAI,WAAY,SAACtC,EAAA,EAAD,IACjC8B,IACC,wBACGA,EAAOoB,KAAI,SAAAC,GAAU,IAAD,EACnB,OACE,SAAC,IAAD,WACE,SAAC,KAAD,CACEC,GAAE,UAAKD,EAAMlC,IACboC,MAAO,CACLC,KAAMnB,GAHV,mBAMGgB,EAAMI,aANT,QAMkBJ,EAAMK,QAPXL,EAAMlC","sources":["components/Loader/Loader.jsx","services/api-movies.js","views/HomeView/HomeView.styled.jsx","views/MoviesView/MoviesView.styled.jsx","views/MoviesView/MoviesView.jsx"],"sourcesContent":["import { BallTriangle } from 'react-loader-spinner';\n\nexport default function Loader() {\n  return (\n    <BallTriangle\n      color=\"pink\"\n      height={80}\n      width={80}\n      wrapperStyle={{ justifyContent: 'center' }}\n    />\n  );\n}\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '30b880cb8af36a78b014f41021bfb163';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const getSearchMovies = async searchQuery => {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${API_KEY}&query=${searchQuery}`\n    );\n    return response.data.results;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const getMovieDetails = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const getMovieCredits = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n    return response.data.cast;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const getMovieReviews = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n","import styled from '@emotion/styled';\n\nexport const ListItem = styled.li`\n  padding: 5px 0px;\n`;\n","import styled from '@emotion/styled';\n\nexport const FormContainer = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const FormInput = styled.input`\n  height: 30px;\n  font-size: 24px;\n  padding-left: 5px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  outline: none;\n  cursor: pointer;\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :focus {\n    border: 1px solid #f32179;\n  }\n`;\n\nexport const Button = styled.button`\n  height: 32px;\n  font-size: 16px;\n  cursor: pointer;\n  color: white;\n  background-color: #f32179;\n  border-radius: 4px;\n  border: 1px solid transparent;\n  box-shadow: 0px 4px 4px rgb(0 0 0 / 15%);\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  margin-left: 10px;\n  :hover,\n  :focus {\n    background-color: #f321c6;\n  }\n`;\n\nexport const ListItem = styled.li`\n  padding: 5px 0px;\n`;\n","import { useState, useEffect } from 'react';\nimport { FormContainer, FormInput, Button } from './MoviesView.styled';\nimport { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport { ListItem } from 'views/HomeView/HomeView.styled';\nimport Loader from 'components/Loader/Loader';\nimport * as API from '../../services/api-movies';\nimport { toast } from 'react-toastify';\n\nexport default function MoviesView() {\n  const [inputValue, setInputValue] = useState('');\n  const [movies, setMovies] = useState(null);\n  const [query, setQuery] = useSearchParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!query.get('query')) {\n      setMovies(null);\n      return;\n    }\n\n    const getData = async () => {\n      const results = await API.getSearchMovies(query.get('query'));\n      setMovies(results);\n      if (results.length === 0) {\n        toast.info('Movies is not found');\n      }\n    };\n    getData();\n  }, [query]);\n\n  const handleSearchChange = e => {\n    setInputValue(e.currentTarget.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!inputValue) {\n      toast.info('Please enter film name');\n    }\n    setQuery({ query: inputValue });\n    setInputValue('');\n  };\n\n  return (\n    <>\n      <FormContainer autoComplete=\"off\" onSubmit={handleSubmit}>\n        <FormInput\n          type=\"text\"\n          value={inputValue}\n          onChange={handleSearchChange}\n        />\n        <Button type=\"submit\">Search</Button>\n      </FormContainer>\n      {!movies && query.get('query') && <Loader />}\n      {movies && (\n        <ul>\n          {movies.map(movie => {\n            return (\n              <ListItem key={movie.id}>\n                <Link\n                  to={`${movie.id}`}\n                  state={{\n                    from: location,\n                  }}\n                >\n                  {movie.title ?? movie.name}\n                </Link>\n              </ListItem>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n}\n"],"names":["Loader","color","height","width","wrapperStyle","justifyContent","axios","API_KEY","getTrendingMovies","response","data","results","toast","message","getSearchMovies","searchQuery","getMovieDetails","id","getMovieCredits","cast","getMovieReviews","ListItem","styled","FormContainer","FormInput","Button","MoviesView","useState","inputValue","setInputValue","movies","setMovies","useSearchParams","query","setQuery","location","useLocation","useEffect","get","getData","API","length","autoComplete","onSubmit","e","preventDefault","type","value","onChange","currentTarget","map","movie","to","state","from","title","name"],"sourceRoot":""}