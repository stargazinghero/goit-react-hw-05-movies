{"version":3,"file":"static/js/460.b48fd171.chunk.js","mappings":"6LAEe,SAASA,IACtB,OACE,SAAC,KAAD,CACEC,MAAM,OACNC,OAAQ,GACRC,MAAO,GACPC,aAAc,CAAEC,eAAgB,c,oNCLtCC,IAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,6GAENF,IAAAA,IAAA,oCAAuCC,IAFjC,cAEvBE,EAFuB,yBAGtBA,EAASC,KAAKC,SAHQ,gCAK7BC,EAAAA,GAAAA,MAAY,KAAMC,SALW,yDAAH,qDASjBC,EAAe,mCAAG,WAAMC,GAAN,gGAEJT,IAAAA,IAAA,gCACIC,EADJ,kBACqBQ,IAHjB,cAErBN,EAFqB,yBAKpBA,EAASC,KAAKC,SALM,gCAO3BC,EAAAA,GAAAA,MAAY,KAAMC,SAPS,yDAAH,sDAWfG,EAAe,mCAAG,WAAMC,GAAN,gGAEJX,IAAAA,IAAA,iBAAoBW,EAApB,oBAAkCV,IAF9B,cAErBE,EAFqB,yBAGpBA,EAASC,MAHW,gCAK3BE,EAAAA,GAAAA,MAAY,KAAMC,SALS,yDAAH,sDASfK,EAAe,mCAAG,WAAMD,GAAN,gGAEJX,IAAAA,IAAA,iBAAoBW,EAApB,4BAA0CV,IAFtC,cAErBE,EAFqB,yBAGpBA,EAASC,KAAKS,MAHM,gCAK3BP,EAAAA,GAAAA,MAAY,KAAMC,SALS,yDAAH,sDASfO,EAAe,mCAAG,WAAMH,GAAN,gGAEJX,IAAAA,IAAA,iBAAoBW,EAApB,4BAA0CV,IAFtC,cAErBE,EAFqB,yBAGpBA,EAASC,KAAKC,SAHM,gCAK3BC,EAAAA,GAAAA,MAAY,KAAMC,SALS,yDAAH,uD,8HC3Cb,SAASQ,EAAT,GAA+B,IAATC,EAAQ,EAARA,KACnC,OAAO,wBAAKA,I,sDCIC,SAASC,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAUjB,OARAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,oGACQC,EAAAA,KADR,OACRpB,EADQ,OAEde,EAAUf,GAFI,2CAAH,qDAIbmB,MACC,KAGD,iCACE,SAACT,EAAD,CAAYC,KAAK,oBACfG,IAAU,SAACzB,EAAA,EAAD,IACXyB,IACC,wBACGA,EAAOO,KAAI,SAAAC,GAAU,IAAD,EACnB,OACE,SAAC,IAAD,WACE,SAAC,KAAD,CAAMC,GAAE,iBAAYD,EAAMhB,IAAMkB,MAAO,CAAEC,KAAMT,GAA/C,mBACGM,EAAMI,aADT,QACkBJ,EAAMK,QAFXL,EAAMhB,c,oECzBtBsB,E,QAAWC,EAAAA,GAAH","sources":["components/Loader/Loader.jsx","services/api-movies.js","components/PageHeader/PageHeader.jsx","views/HomeView/HomeView.jsx","views/HomeView/HomeView.styled.jsx"],"sourcesContent":["import { BallTriangle } from 'react-loader-spinner';\n\nexport default function Loader() {\n  return (\n    <BallTriangle\n      color=\"pink\"\n      height={80}\n      width={80}\n      wrapperStyle={{ justifyContent: 'center' }}\n    />\n  );\n}\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '30b880cb8af36a78b014f41021bfb163';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const getSearchMovies = async searchQuery => {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${API_KEY}&query=${searchQuery}`\n    );\n    return response.data.results;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const getMovieDetails = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const getMovieCredits = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n    return response.data.cast;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const getMovieReviews = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n","import PropTypes from 'prop-types';\n\nexport default function PageHeader({ text }) {\n  return <h1>{text}</h1>;\n}\n\nPageHeader.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n","import Loader from 'components/Loader/Loader';\nimport PageHeader from 'components/PageHeader/PageHeader';\nimport { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport * as API from '../../services/api-movies';\nimport { ListItem } from './HomeView.styled';\n\nexport default function HomeView() {\n  const [movies, setMovies] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    const getData = async () => {\n      const results = await API.getTrendingMovies();\n      setMovies(results);\n    };\n    getData();\n  }, []);\n\n  return (\n    <>\n      <PageHeader text=\"Trending today\" />\n      {!movies && <Loader />}\n      {movies && (\n        <ul>\n          {movies.map(movie => {\n            return (\n              <ListItem key={movie.id}>\n                <Link to={`movies/${movie.id}`} state={{ from: location }}>\n                  {movie.title ?? movie.name}\n                </Link>\n              </ListItem>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const ListItem = styled.li`\n  padding: 5px 0px;\n`;\n"],"names":["Loader","color","height","width","wrapperStyle","justifyContent","axios","API_KEY","getTrendingMovies","response","data","results","toast","message","getSearchMovies","searchQuery","getMovieDetails","id","getMovieCredits","cast","getMovieReviews","PageHeader","text","HomeView","useState","movies","setMovies","location","useLocation","useEffect","getData","API","map","movie","to","state","from","title","name","ListItem","styled"],"sourceRoot":""}