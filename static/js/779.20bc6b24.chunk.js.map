{"version":3,"file":"static/js/779.20bc6b24.chunk.js","mappings":"6LAEe,SAASA,IACtB,OACE,SAAC,KAAD,CACEC,MAAM,OACNC,OAAQ,GACRC,MAAO,GACPC,aAAc,CAAEC,eAAgB,c,oNCLtCC,IAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,6GAENF,IAAAA,IAAA,oCAAuCC,IAFjC,cAEvBE,EAFuB,yBAGtBA,EAASC,KAAKC,SAHQ,gCAK7BC,EAAAA,GAAAA,MAAY,KAAMC,SALW,yDAAH,qDASjBC,EAAe,mCAAG,WAAMC,GAAN,gGAEJT,IAAAA,IAAA,gCACIC,EADJ,kBACqBQ,IAHjB,cAErBN,EAFqB,yBAKpBA,EAASC,KAAKC,SALM,gCAO3BC,EAAAA,GAAAA,MAAY,KAAMC,SAPS,yDAAH,sDAWfG,EAAe,mCAAG,WAAMC,GAAN,gGAEJX,IAAAA,IAAA,iBAAoBW,EAApB,oBAAkCV,IAF9B,cAErBE,EAFqB,yBAGpBA,EAASC,MAHW,gCAK3BE,EAAAA,GAAAA,MAAY,KAAMC,SALS,yDAAH,sDASfK,EAAe,mCAAG,WAAMD,GAAN,gGAEJX,IAAAA,IAAA,iBAAoBW,EAApB,4BAA0CV,IAFtC,cAErBE,EAFqB,yBAGpBA,EAASC,KAAKS,MAHM,gCAK3BP,EAAAA,GAAAA,MAAY,KAAMC,SALS,yDAAH,sDASfO,EAAe,mCAAG,WAAMH,GAAN,gGAEJX,IAAAA,IAAA,iBAAoBW,EAApB,4BAA0CV,IAFtC,cAErBE,EAFqB,yBAGpBA,EAASC,KAAKC,SAHM,gCAK3BC,EAAAA,GAAAA,MAAY,KAAMC,SALS,yDAAH,uD,oEC3CfQ,E,QAAWC,EAAAA,GAAH,8C,mICARC,EAAaD,EAAAA,EAAAA,IAAH,6HAOVE,EAAYF,EAAAA,EAAAA,IAAH,8CAITG,EAAiBH,EAAAA,EAAAA,GAAH,uF,uKCbrBI,EAAS,CACb,CAAET,GAAI,GAAIU,KAAM,UAChB,CAAEV,GAAI,GAAIU,KAAM,aAChB,CAAEV,GAAI,GAAIU,KAAM,aAChB,CAAEV,GAAI,GAAIU,KAAM,UAChB,CAAEV,GAAI,GAAIU,KAAM,SAChB,CAAEV,GAAI,GAAIU,KAAM,eAChB,CAAEV,GAAI,GAAIU,KAAM,SAChB,CAAEV,GAAI,MAAOU,KAAM,UACnB,CAAEV,GAAI,GAAIU,KAAM,WAChB,CAAEV,GAAI,GAAIU,KAAM,WAChB,CAAEV,GAAI,GAAIU,KAAM,UAChB,CAAEV,GAAI,MAAOU,KAAM,SACnB,CAAEV,GAAI,KAAMU,KAAM,WAClB,CAAEV,GAAI,MAAOU,KAAM,WACnB,CAAEV,GAAI,IAAKU,KAAM,mBACjB,CAAEV,GAAI,MAAOU,KAAM,YACnB,CAAEV,GAAI,GAAIU,KAAM,YAChB,CAAEV,GAAI,MAAOU,KAAM,OACnB,CAAEV,GAAI,GAAIU,KAAM,YAGX,SAASC,EAAUC,GACxB,IADiC,EAC3BC,EAAM,GADqB,UAEbJ,GAFa,IAEjC,2BAA4B,CAAC,IAAlBK,EAAiB,QACtBF,EAAQG,SAASD,EAAMd,KACzBa,EAAIG,KAAKF,EAAMJ,OAJc,8BAWjC,OAJIE,EAAQK,OAAS,GACnBJ,EAAIK,OAAO,EAAGL,EAAII,OAAS,EAAG,SAGzBJ,EAAIM,KAAK,M,iCCnBH,SAASC,IAAoB,IAAD,EACzC,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,oGACQC,EAAAA,GAAoBR,GAD5B,OACR9B,EADQ,OAEd6B,EAAS7B,GAFK,2CAAH,qDAIbqC,MACC,CAACP,IAeJ,OACE,iCACE,mBAAQS,KAAK,SAASC,QAAS,kBAfpB,WAAO,IAAD,IACnB,GACEN,EAASO,SAASpB,SAAS,SAC3Ba,EAASO,SAASpB,SAAS,YAD3B,OAEAa,QAFA,IAEAA,GAFA,UAEAA,EAAUQ,aAFV,iBAEA,EAAiBC,YAFjB,OAEA,EAAuBC,OAEvB,OAAOZ,EACLE,EAASQ,MAAMC,KAAKF,SAAWP,EAASQ,MAAMC,KAAKC,QAGvDZ,EAAS,KAK8Ba,IAArC,sBAGEjB,IAAS,SAACvC,EAAA,EAAD,IACVuC,IACC,iCACE,UAAC,KAAD,WACGA,EAAMkB,aACL,gBACEC,IAAG,yCAAoCnB,EAAMkB,aAC7CE,IAAKpB,EAAMqB,kBAGb,gBACEF,IAAI,0EACJC,IAAI,aAGR,UAAC,KAAD,YACE,0BACGpB,EAAMsB,MADT,YACkBtB,QADlB,IACkBA,GADlB,UACkBA,EAAOuB,oBADzB,aACkB,EAAqBC,MAAM,KAAK,GADlD,QAGA,wCAAqC,GAArBxB,EAAMyB,aAAtB,QACA,sCACA,uBAAIzB,EAAM0B,YACV,oCACA,uBAAIrC,EAAUa,YAGlB,mDACA,UAAC,KAAD,YACE,SAAC,IAAD,WACE,SAAC,KAAD,CAASyB,GAAG,OAAOb,MAAOR,EAASQ,MAAnC,qBAIF,SAAC,IAAD,WACE,SAAC,KAAD,CAASa,GAAG,UAAUb,MAAOR,EAASQ,MAAtC,2BAKJ,SAAC,KAAD","sources":["components/Loader/Loader.jsx","services/api-movies.js","views/HomeView/HomeView.styled.jsx","views/MovieDetailsView/MoveDetails.styled.jsx","services/genres.js","views/MovieDetailsView/MovieDetailsView.jsx"],"sourcesContent":["import { BallTriangle } from 'react-loader-spinner';\n\nexport default function Loader() {\n  return (\n    <BallTriangle\n      color=\"pink\"\n      height={80}\n      width={80}\n      wrapperStyle={{ justifyContent: 'center' }}\n    />\n  );\n}\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '30b880cb8af36a78b014f41021bfb163';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const getSearchMovies = async searchQuery => {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${API_KEY}&query=${searchQuery}`\n    );\n    return response.data.results;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const getMovieDetails = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const getMovieCredits = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n    return response.data.cast;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const getMovieReviews = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n","import styled from '@emotion/styled';\n\nexport const ListItem = styled.li`\n  padding: 5px 0px;\n`;\n","import styled from '@emotion/styled';\n\nexport const BlockMovie = styled.div`\n  display: flex;\n  margin-top: 10px;\n  padding-bottom: 20px;\n  border-bottom: 1px solid #2a363b;\n`;\n\nexport const MovieInfo = styled.div`\n  margin-left: 20px;\n`;\n\nexport const AdditionalInfo = styled.ul`\n  padding-bottom: 20px;\n  border-bottom: 1px solid #2a363b;\n`;\n","const genres = [\n  { id: 28, name: 'Action' },\n  { id: 12, name: 'Adventure' },\n  { id: 16, name: 'Animation' },\n  { id: 35, name: 'Comedy' },\n  { id: 80, name: 'Crime' },\n  { id: 99, name: 'Documentary' },\n  { id: 18, name: 'Drama' },\n  { id: 10751, name: 'Family' },\n  { id: 14, name: 'Fantasy' },\n  { id: 36, name: 'History' },\n  { id: 27, name: 'Horror' },\n  { id: 10402, name: 'Music' },\n  { id: 9648, name: 'Mystery' },\n  { id: 10749, name: 'Romance' },\n  { id: 878, name: 'Science Fiction' },\n  { id: 10770, name: 'TV Movie' },\n  { id: 53, name: 'Thriller' },\n  { id: 10752, name: 'War' },\n  { id: 37, name: 'Western' },\n];\n\nexport function getGenres(arrayId) {\n  const arr = [];\n  for (const value of genres) {\n    if (arrayId.includes(value.id)) {\n      arr.push(value.name);\n    }\n  }\n  if (arrayId.length > 2) {\n    arr.splice(2, arr.length - 2, 'Other');\n  }\n\n  return arr.join(', ');\n}\n","import Loader from 'components/Loader/Loader';\nimport { useState, useEffect } from 'react';\nimport {\n  useParams,\n  useNavigate,\n  useLocation,\n  NavLink,\n  Outlet,\n} from 'react-router-dom';\nimport * as API from '../../services/api-movies';\nimport { getGenres } from 'services/genres';\nimport { AdditionalInfo, BlockMovie, MovieInfo } from './MoveDetails.styled';\nimport { ListItem } from 'views/HomeView/HomeView.styled';\n\nexport default function MovieDetailsView() {\n  const [movie, setMovie] = useState({});\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    const getData = async () => {\n      const results = await API.getMovieDetails(movieId);\n      setMovie(results);\n    };\n    getData();\n  }, [movieId]);\n\n  const goBack = () => {\n    if (\n      location.pathname.includes('cast') ||\n      location.pathname.includes('reviews') ||\n      location?.state?.from?.search\n    ) {\n      return navigate(\n        location.state.from.pathname + location.state.from.search\n      );\n    }\n    navigate('/');\n  };\n\n  return (\n    <>\n      <button type=\"button\" onClick={() => goBack()}>\n        Go Back\n      </button>\n      {!movie && <Loader />}\n      {movie && (\n        <>\n          <BlockMovie>\n            {movie.poster_path ? (\n              <img\n                src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\n                alt={movie.original_title}\n              />\n            ) : (\n              <img\n                src=\"https://upload.wikimedia.org/wikipedia/commons/c/c2/No_image_poster.png\"\n                alt=\"Unknown\"\n              />\n            )}\n            <MovieInfo>\n              <h1>\n                {movie.title} ({movie?.release_date?.split('-')[0]})\n              </h1>\n              <p>User score: {movie.vote_average * 10}%</p>\n              <h2>Overview</h2>\n              <p>{movie.overview}</p>\n              <h3>Genres</h3>\n              <p>{getGenres(movieId)}</p>\n            </MovieInfo>\n          </BlockMovie>\n          <p>Additional information</p>\n          <AdditionalInfo>\n            <ListItem>\n              <NavLink to=\"cast\" state={location.state}>\n                Cast\n              </NavLink>\n            </ListItem>\n            <ListItem>\n              <NavLink to=\"reviews\" state={location.state}>\n                Reviews\n              </NavLink>\n            </ListItem>\n          </AdditionalInfo>\n          <Outlet />\n        </>\n      )}\n    </>\n  );\n}\n"],"names":["Loader","color","height","width","wrapperStyle","justifyContent","axios","API_KEY","getTrendingMovies","response","data","results","toast","message","getSearchMovies","searchQuery","getMovieDetails","id","getMovieCredits","cast","getMovieReviews","ListItem","styled","BlockMovie","MovieInfo","AdditionalInfo","genres","name","getGenres","arrayId","arr","value","includes","push","length","splice","join","MovieDetailsView","useState","movie","setMovie","movieId","useParams","navigate","useNavigate","location","useLocation","useEffect","getData","API","type","onClick","pathname","state","from","search","goBack","poster_path","src","alt","original_title","title","release_date","split","vote_average","overview","to"],"sourceRoot":""}